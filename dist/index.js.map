{"version":3,"sources":["index.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;AACb,4BAA0B;AAC1B,0CAAwC;AACxC,qCAA8C;AAG9C,eAAA;IADA;QAEY,aAAQ,GAA8B,IAAI,GAAG,EAAE,CAAC;IAU5D,CAAC;IATQ,aAAa,CAAC,KAAa;QAChC,EAAE,CAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAClC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;YAC5B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAClC,MAAM,CAAC,OAAO,CAAC;QACjB,CAAC;IACH,CAAC;CACF,CAAA;AAXD;IADC,mBAAS;;YAYT;AAXY,mBAAA,QAAQ,CAAA;AAcrB,kBAAA;CAIC,CAAA;AAJD;IADC,oBAAU;;eAKV;AAJY,sBAAA,WAAW,CAAA","file":"index.js","sourcesContent":["'use strict';\r\nimport 'reflect-metadata';\r\nimport {Subject} from '@reactivex/rxjs';\r\nimport {singleton, injectable} from 'mlcl_di';\r\n\r\n@singleton\r\nexport class MlclCore {\r\n  protected subjects: Map<string, Subject<any>> = new Map();\r\n  public createSubject(topic: string): Subject<any> {\r\n    if(this.subjects.get(topic)) {\r\n      return this.subjects.get(topic);\r\n    } else {\r\n      let subject = new Subject();\r\n      this.subjects.set(topic, subject);\r\n      return subject;\r\n    }\r\n  }\r\n}\r\n\r\n@injectable\r\nexport class MlclMessage {\r\n  public topic: string;\r\n  public message: any;\r\n  public source: string;\r\n}"]}